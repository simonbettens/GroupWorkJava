package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import javax.mail.MessagingException;

import controllers.AankondigingController;
import domein.Aankondiging;
import domein.AankondigingPrioriteit;
import domein.MailHelper;
import domein.SessieAankondiging;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

import javafx.scene.control.TextArea;
import javafx.scene.control.TextInputDialog;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class AlgemeneAankondigingDetailsController extends VBox
implements DeelScherm<AankondigingenDeelScherm>, PropertyChangeListener {
	@FXML
	private ComboBox<String> cbPrioriteit;
	@FXML
	private TextArea txtInhoud;
	@FXML
	private Label lblError;
	@FXML
	private Button btnVerwijder;
	@FXML
	private Button btnOpslaan;
	@FXML
	private Button btnAnnuleer;
	private AankondigingController ac;
	
	private AankondigingenDeelScherm parent;
	private boolean isEdit;

	@Override
	public void buildGui(AankondigingenDeelScherm parent) {
		// TODO Auto-generated method stub
		this.parent = parent;
		this.ac = parent.getAankondigingController();
		ac.addPropertyChangeListenerSessie(this, "aankondiging");
		isEdit = false;
		
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/AlgemeneAankondigingDetails.fxml"));
		loader.setController(this);
		loader.setRoot(this);
		try {
			loader.load();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		lblError.setText("");
		List<String> aankondigingPrioriteitLijst = Arrays.asList(AankondigingPrioriteit.values()).stream().sorted()
				.map(ap -> AankondigingPrioriteit.AankondigingPrioriteitToString(ap)).collect(Collectors.toList());
		cbPrioriteit.setItems(FXCollections.observableArrayList(aankondigingPrioriteitLijst));
		btnOpslaan.setText("Maak nieuwe aankondiging");
		btnVerwijder.setDisable(true);
	}
	
	// Event Listener on Button[#btnVerwijder].onAction
	@FXML
	public void verwijder(ActionEvent event) {
		Alert alert = new Alert(AlertType.CONFIRMATION);
		alert.setTitle("Aankondiging verwijderen");
		alert.setHeaderText("Bevestig");
		alert.setContentText("Wens je zeker deze aankondiging te verwijderen?");
		Stage stage = (Stage) alert.getDialogPane().getScene().getWindow();
		Optional<ButtonType> antwoord = alert.showAndWait();
		if (antwoord.get() == ButtonType.OK) {
			System.out.println("aankondigning is verwijderd");
			ac.deleteAankondiging();
			event.consume();
		} else {
			event.consume();
		}
		
	}
	
	// Event Listener on Button[#btnOpslaan].onAction
	@FXML
	public void opslaan(ActionEvent event) {
		// TODO Autogenerated
		String inhoud = txtInhoud.getText();
		AankondigingPrioriteit prioriteit = AankondigingPrioriteit
				.StringToAankondigingPrioriteit(cbPrioriteit.getSelectionModel().getSelectedItem());
		try {
			if (isEdit) {
				ac.pasAankondigingAan(inhoud, prioriteit);
			} else {
				ac.maakAankondiging(inhoud, prioriteit);
			}
			lblError.setText("");
			TextInputDialog dialog = new TextInputDialog("");
			 
			dialog.setTitle("Wens je de aankondiging te versturen?");
			dialog.setHeaderText("Zo ja, geef je passwoord in om je mail te versturen:");
			dialog.setContentText("Passwoord:");
			 
			Optional<String> result = dialog.showAndWait();
			 
			result.ifPresent(pass -> {
				try {
					ac.verstuurMailAankondiging(pass);
				} catch (MessagingException e) {
					lblError.setText("Mail kon niet verzonden worden");
					System.out.println(e.getMessage());
				}
			});
		} catch (IllegalArgumentException e) {
			lblError.setText(e.getMessage());
		} 
	}
	
	// Event Listener on Button[#btnAnnuleer].onAction
	@FXML
	public void annuleer(ActionEvent event) {
		// TODO Autogenerated
		if (isEdit) {
			Aankondiging a = ac.getGekozenAankondiging();
			if (ac != null) {
				txtInhoud.setText(a.getInhoud());
				cbPrioriteit.getSelectionModel().select(AankondigingPrioriteit.AankondigingPrioriteitToString(a.getPrioriteit()));
			} else {
				txtInhoud.setText("");
				cbPrioriteit.getSelectionModel().select("");
			}
		} else {
			txtInhoud.setText("");
			cbPrioriteit.getSelectionModel().select("");
		}
	}
	
	
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		if (evt.getPropertyName().equals("aankondiging")) {
			if (evt.getNewValue() != null) {
				btnOpslaan.setText("Wijzigingen opslaan");
				btnVerwijder.setDisable(false);
				isEdit = true;
				Aankondiging a = (Aankondiging) evt.getNewValue();
				txtInhoud.setText(a.getInhoud());
				cbPrioriteit.getSelectionModel()
						.select(AankondigingPrioriteit.AankondigingPrioriteitToString(a.getPrioriteit()));
			}
		}
	}	
}
