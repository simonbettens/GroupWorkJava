package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.Button;

import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.stream.Collectors;

import controllers.StatistiekController;
import domein.Gebruiker;
import domein.Maand;
import domein.SessieKalender;
import javafx.event.ActionEvent;

import javafx.scene.control.ComboBox;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TableView;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.scene.control.TableColumn;

public class GebruikerStatistiekLijstController extends VBox implements DeelScherm<StatistiekScherm> {
	@FXML
	private Button btnSessies;
	@FXML
	private ComboBox<String> chSessiekalender;
	@FXML
	private ComboBox<String> chMaand;
	@FXML
	private TableView<Gebruiker> tbGebruikers;
	@FXML
	private TableColumn<Gebruiker, String> colNaam;
	@FXML
	private TableColumn<Gebruiker, String> colUsername;
	@FXML
	private TableColumn<Gebruiker, String> colType;
	@FXML
	private TableColumn<Gebruiker, String> colStatus;
	private StatistiekScherm parent;
	private StatistiekController sc;

	@Override
	public void buildGui(StatistiekScherm parent) {
		// TODO Auto-generated method stub
		this.parent = parent;
		this.sc = parent.getStatistiekController();
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/GebruikerStatistiekLijst.fxml"));
		loader.setController(this);
		loader.setRoot(this);

		try {
			loader.load();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		chSessiekalender.getItems().setAll(sc.getSessieKalenderObservableLijst());
		chMaand.getSelectionModel().select(Maand.of(LocalDate.now().getMonthValue()).toString());
		chMaand.getItems()
				.addAll(Arrays.asList(Maand.values()).stream().map(e -> e.toString()).collect(Collectors.toList()));
		chMaand.getItems().add("--Alles--");
		SessieKalender sk = sc.getGekozenSessieKalender();
		if (sk != null) {
			chSessiekalender.getSelectionModel().select(sk.toString());
		}
		vulTabel();
	}

	private void vulTabel() {
		tbGebruikers.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
		tbGebruikers.setItems(sc.getGebruikerObsLijst());
		colNaam.setCellValueFactory(cel -> cel.getValue().getVolledigeNaamProperty());
		colUsername.setCellValueFactory(cel -> cel.getValue().getGebruikerNaamProperty());
		colType.setCellValueFactory(cel -> cel.getValue().getTypeProperty());
		colStatus.setCellValueFactory(cel -> cel.getValue().getStatusProperty());
		tbGebruikers.getSelectionModel().selectedItemProperty().addListener((obs,oldV,newV)->{
			
			sc.setGekozenebruiker(newV);
        });
		this.setVgrow(tbGebruikers, Priority.SOMETIMES);

	}

	// Event Listener on Button[#btnSessies].onAction
	@FXML
	public void swichtSessies(ActionEvent event) {
		// TODO Autogenerated
		parent.reload(21, 19);
	}

	// Event Listener on ComboBox[#chSessiekalender].onAction
	@FXML
	public void switchSessiekalender(ActionEvent event) {
		// TODO Autogenerated
		chMaand.getSelectionModel().clearSelection();
		sc.changeSelectedSessieKalender(chSessiekalender.getSelectionModel().getSelectedItem(),2);
		vulTabel();
	}

	// Event Listener on ComboBox[#chMaand].onAction
	@FXML
	public void switchMaand(ActionEvent event) {
		// TODO Autogenerated
		sc.changeSelectedMaand(chMaand.getSelectionModel().getSelectedItem(),2);
	}

}
